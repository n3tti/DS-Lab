"""ScrapedPage extend with content_formatted_with_markdown field

Revision ID: 7d528b1c979c
Revises: 27f6f4997933
Create Date: 2024-11-22 21:02:38.235481

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy import MetaData, Table

# revision identifiers, used by Alembic.
revision: str = "7d528b1c979c"
down_revision: Union[str, None] = "27f6f4997933"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("scraped_pages", sa.Column("content_formatted_with_markdown", sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    bind = op.get_bind()
    metadata = MetaData()
    metadata.bind = bind

    existing_table = Table("scraped_pages", metadata, autoload_with=bind)

    column_to_drop = "content_formatted_with_markdown"

    new_table_name = "temp_scraped_pages"
    new_columns = [col.copy() for col in existing_table.columns if col.name != column_to_drop]
    new_table = Table(new_table_name, metadata, *new_columns)

    new_table.create(bind)

    # copy data from the old table to the new table, excluding the dropped column
    cols_to_copy = [col.name for col in existing_table.columns if col.name != column_to_drop]
    op.execute(sa.text(f'INSERT INTO {new_table_name} ({", ".join(cols_to_copy)}) SELECT {", ".join(cols_to_copy)} FROM {existing_table.name}'))

    op.drop_table(existing_table.name)
    op.rename_table(new_table_name, existing_table.name)
